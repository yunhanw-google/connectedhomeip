{{> header}}

#pragma once
#include im-cluster-header.h
#include <array>
#include <type_traits>

namespace chip {
    namespace app {
        namespace clusters {

        {{#all_user_clusters}}
{{#if (user_cluster_has_enabled_command name side)}}
namespace {{asCamelCased name false}}Cluster {
    extern ClusterDescriptor ClusterDescriptor;
{{#zcl_commands}}
namespace {{asType label}} {
    constexpr int NumImplementedFields = GetNumImplementedFields(_Schema);
    extern const StructDescriptor<NumImplementedFields> Descriptor;

    class Type {
    public:
        {{#zcl_command_arguments}}
        {{#if (isOctetString type)}}chip::ByteSpan{{else}}{{asUnderlyingZclType type}}{{/if}} {{asType label}};
        {{/zcl_command_arguments}}
        static const StructDescriptor<NumImplementedFields> &mDescriptor;
    };
}
{{/zcl_commands}}

{{/if}}
{{/all_user_clusters}}

} // namespace clusters
} // namespace app
} // namespace chip
